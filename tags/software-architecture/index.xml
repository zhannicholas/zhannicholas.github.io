<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Architecture on</title><link>https://zhannicholas.github.io/tags/software-architecture/</link><description>Recent content in Software Architecture on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 30 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://zhannicholas.github.io/tags/software-architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>C4 Model</title><link>https://zhannicholas.github.io/pages/c4-model/</link><pubDate>Tue, 30 Aug 2022 00:00:00 +0000</pubDate><guid>https://zhannicholas.github.io/pages/c4-model/</guid><description>The C4 model for visualizing software architecture .
The C4 model was created as a way to help software development teams (primarily architects and developers) describe and communicate software architecture, at different levels of detail, telling different stories to different types of audience, when doing up front design or retrospectively documenting an existing codebase.
The C4 model considers the static structures of a software system in terms of containers, components and code.</description></item><item><title>Fundamentals of Software Architecture</title><link>https://zhannicholas.github.io/pages/fundamentals-of-software-architecture/</link><pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate><guid>https://zhannicholas.github.io/pages/fundamentals-of-software-architecture/</guid><description>This is my reading notes from Fundamentals of Software Architecture . Preface. Invalidating Axioms Axiom: A statement or proposition which is regarded as being established, accepted, or self-evidently true. 数学家基于公理建立数学理论，软件架构师也是如此。但是软件世界与数学世界有一点很大的</description></item><item><title>Design Data Intensive Applications</title><link>https://zhannicholas.github.io/pages/design-data-intensive-applications/</link><pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate><guid>https://zhannicholas.github.io/pages/design-data-intensive-applications/</guid><description>This is my reading notes of Design Data Intensive Applications . Preface if data (quantity, complexity, change speed, etc) is an application&amp;rsquo;s primary challenge, then we call the application data-intensive. As opposed to compute-intensive, where CPU cycles are the bottleneck. When we think about data systems, not just think how they work, but also why they work that way, and what questions we need to ask. Reference materials: ddia-references .</description></item></channel></rss>