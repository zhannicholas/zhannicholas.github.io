<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OSTEP on Nicholas Zhan</title><link>https://zhannicholas.github.io/tags/ostep/</link><description>Recent content in OSTEP on Nicholas Zhan</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 19 Mar 2021 22:36:40 +0800</lastBuildDate><atom:link href="https://zhannicholas.github.io/tags/ostep/index.xml" rel="self" type="application/rss+xml"/><item><title>内存虚拟化</title><link>https://zhannicholas.github.io/notebook/reading_notes/ostep/virtualization-memory/</link><pubDate>Fri, 19 Mar 2021 22:36:40 +0800</pubDate><guid>https://zhannicholas.github.io/notebook/reading_notes/ostep/virtualization-memory/</guid><description>地址空间 操作系统为用户提供了一个易于使用的物理内存抽象，这个抽象叫做 地址空间（address space）。在系统中，地址空间是运行的程序看到</description></item><item><title>CPU 虚拟化</title><link>https://zhannicholas.github.io/notebook/reading_notes/ostep/virtualization-cpu/</link><pubDate>Mon, 15 Mar 2021 21:28:39 +0800</pubDate><guid>https://zhannicholas.github.io/notebook/reading_notes/ostep/virtualization-cpu/</guid><description>进程 进程即运行中的程序。程序本身是没有生命周期的，它只是存在磁盘上的一些指令（也可能是一些静态数据）。事实表明，人们通常希望同时运行多个程序</description></item><item><title>Introduction to Operating Systems</title><link>https://zhannicholas.github.io/notebook/reading_notes/ostep/introduction_to_operating_systems/</link><pubDate>Sun, 14 Mar 2021 23:03:01 +0800</pubDate><guid>https://zhannicholas.github.io/notebook/reading_notes/ostep/introduction_to_operating_systems/</guid><description>程序运行时会发生什么？ 一个正在运行的程序会做一件非常简单的事情：执行指令。CPU 从内存中取出（fetch）一条指令，对其进行译码（decod</description></item></channel></rss>