<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on 's Digital Garden</title><link>https://zhannicholas.github.io/tags/%E7%AE%97%E6%B3%95/</link><description>Recent content in 算法 on 's Digital Garden</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 02 Jun 2018 10:07:28 +0800</lastBuildDate><atom:link href="https://zhannicholas.github.io/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>《C 算法》读书笔记</title><link>https://zhannicholas.github.io/library/algorithms_in_c/</link><pubDate>Sat, 02 Jun 2018 10:07:28 +0800</pubDate><guid>https://zhannicholas.github.io/library/algorithms_in_c/</guid><description>二叉树 树是满足一定要求的顶点和边的非空集合。二叉树的每个节点至多有2个子节点。 一种表示方法：
struct Node{type key; Node *lchild, *richild;} typedef Node *link; 这种表示方法只适合从根节点开始自顶向下的操作，而不适合自底向上的操作。不过可以在节点的定义中加入指向父节点的连接支持这种功能。 与二叉树类似的还有M叉树，它的每个节点最多只有M个节点。广义的树每个节点可以有任意多个子节点，可以用二叉树来表示它们，方法就是——“左孩子，右兄弟”。树的序列就形成了有序森林。
二叉树和有序森林之间存在一一的对应关系。
二叉树的一些数学性质 一棵二叉树有 N 个内部节点，有 N + 1 个外部节点（叶子节点）。 包含 N 个内部节点的二叉树有 2N 个链接： N - 1 个外部节点的链接和 N + 1 个内部节点的链接。 树中节点的所在的层是它的父节点的下一层（根节点位于第 0 层）。树的高度为树节点的最大层。树的路径长度为所有树节点的层总和：外部路径长度为所有外部节点的层总和，内部路径长度为所有内部节点的层总和。 这里有一个计算树路径长度的简便方法：对于所有的 k , 求 k 与 k 层节点数之积的总和。 具有 N 个内部节点的二叉树的外部路径长度比内部路径长度大 2N 。 具有 N 个内部节点的二叉树的高度的最小值为 lgN ，最大值为 N - 1 。 当树退化成只有一个叶子节点的时候，就是最坏的情况。 具有 N 个内部节点的二叉树内部路径长度最小值为 Nlg(N/4) ，最大值为 N(N - 1)/2 。 树的遍历 前序遍历 根-&amp;gt;左孩子-&amp;gt;右孩子 中序遍历 左孩子-&amp;gt;根-&amp;gt;右孩子 后序遍历 左孩子-&amp;gt;右孩子-&amp;gt;根 层次遍历 从上到下，从左到右 前序遍历（递归版）：</description></item></channel></rss>