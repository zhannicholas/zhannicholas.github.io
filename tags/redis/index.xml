<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Redis on Nicholas Zhan</title><link>https://zhannicholas.github.io/tags/redis/</link><description>Recent content in Redis on Nicholas Zhan</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 19 Aug 2021 09:52:38 +0800</lastBuildDate><atom:link href="https://zhannicholas.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis 中的 key 过期与淘汰机制</title><link>https://zhannicholas.github.io/posts/databases/redis/key_expiration_and_eviction_in_redis/</link><pubDate>Thu, 19 Aug 2021 09:52:38 +0800</pubDate><guid>https://zhannicholas.github.io/posts/databases/redis/key_expiration_and_eviction_in_redis/</guid><description>作为一个内存数据库，Redis 的容量肯定是有限的。如果 Redis 允许我们不断写入数据而又不作任何清理工作的话，内存迟早要被耗尽。此外，若我们在 Redis 中创</description></item><item><title>Redis中的事务</title><link>https://zhannicholas.github.io/posts/databases/redis/transactions/</link><pubDate>Sun, 13 Dec 2020 17:52:50 +0800</pubDate><guid>https://zhannicholas.github.io/posts/databases/redis/transactions/</guid><description>Redis中提供了5个和事务相关的命令：MULTI、EXEC、DISCARD、**WATCH key [key ...]**和 UNWATCH。Redis事务</description></item><item><title>Redis Streams</title><link>https://zhannicholas.github.io/posts/databases/redis/redis_streams/</link><pubDate>Sun, 13 Dec 2020 17:49:38 +0800</pubDate><guid>https://zhannicholas.github.io/posts/databases/redis/redis_streams/</guid><description>作为Redis 5.0中推出的全新数据结构，stream的行为就像append-only log一样，但它由基数树(radix tree)实现。s</description></item><item><title>Redis数据结构</title><link>https://zhannicholas.github.io/posts/databases/redis/redis_datastructures/</link><pubDate>Sun, 13 Dec 2020 17:47:33 +0800</pubDate><guid>https://zhannicholas.github.io/posts/databases/redis/redis_datastructures/</guid><description>Redis的键是一个字符串。在Redis中，字符串二进制安全的，也就是说：Redis中的字符串可以是任何二进制序列，即可以是任何类型的数据(</description></item><item><title>Publish/Subscribe</title><link>https://zhannicholas.github.io/posts/databases/redis/publish_subscribe/</link><pubDate>Sun, 13 Dec 2020 17:45:33 +0800</pubDate><guid>https://zhannicholas.github.io/posts/databases/redis/publish_subscribe/</guid><description>Redis通过 PUBLISH、**SUBSCRIBE**等命令实现了发布-订阅模式，这个功能提供了两种信息机制：simple syndicat</description></item><item><title>Redis Lua 脚本</title><link>https://zhannicholas.github.io/posts/databases/redis/lua_scripting/</link><pubDate>Sun, 13 Dec 2020 17:41:46 +0800</pubDate><guid>https://zhannicholas.github.io/posts/databases/redis/lua_scripting/</guid><description>Redis支持在服务端使用Lua解释器执行Lua脚本。Redis本身已经提供了非常多的命令，而Lua脚本可以帮助我们使用Lua提供的语言特性</description></item><item><title>Jedis</title><link>https://zhannicholas.github.io/posts/databases/redis/jedis/</link><pubDate>Sun, 13 Dec 2020 17:40:18 +0800</pubDate><guid>https://zhannicholas.github.io/posts/databases/redis/jedis/</guid><description>Jedis是一个Java编写的Redis客户端，提供了完整的Redis API。Redis客户端通常需要具备三种能力：管理Redis连接、实现</description></item><item><title>初见Redis</title><link>https://zhannicholas.github.io/posts/databases/redis/redis_at_first_sight/</link><pubDate>Wed, 25 Sep 2019 19:24:06 +0800</pubDate><guid>https://zhannicholas.github.io/posts/databases/redis/redis_at_first_sight/</guid><description>Redis是一个位于内存中的数据结构存储系统，由 ANSI C 语言编写。可用作数据库、缓存和消息中间件。它支持的数据结构有：string、hash、l</description></item></channel></rss>