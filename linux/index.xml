<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Nicholas Zhan</title><link>https://zhannicholas.github.io/linux/</link><description>Recent content in Linux on Nicholas Zhan</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 27 Oct 2021 22:26:55 +0800</lastBuildDate><atom:link href="https://zhannicholas.github.io/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Shell 脚本：I/O 重定向</title><link>https://zhannicholas.github.io/linux/shell_scripting_io_redirection/</link><pubDate>Wed, 27 Oct 2021 22:26:55 +0800</pubDate><guid>https://zhannicholas.github.io/linux/shell_scripting_io_redirection/</guid><description>文件输入和输出是通过整数句柄（integer handle）实现的——每个打开的文件都会被赋予一个数字，这个数字就是文件描述符（file des</description></item><item><title>Shell 脚本：正则表达式</title><link>https://zhannicholas.github.io/linux/shell_scripting_regular_expressions/</link><pubDate>Wed, 27 Oct 2021 21:10:27 +0800</pubDate><guid>https://zhannicholas.github.io/linux/shell_scripting_regular_expressions/</guid><description>正则表达式（regular expression, RE）在 Shell 中的应用非常广泛，我们常用的 find、grep、sed、awk 等命令都涉及到正则表达式…… 在 Shell 中，表达</description></item><item><title>Shell 脚本：shell 展开</title><link>https://zhannicholas.github.io/linux/shell_scripting_shell_expansion/</link><pubDate>Sat, 23 Oct 2021 17:15:13 +0800</pubDate><guid>https://zhannicholas.github.io/linux/shell_scripting_shell_expansion/</guid><description>Bash 和其它 shell 做的工作远不止执行命令那么简单。以下提到的各种展开（expansion）操作发生在 Bash 执行命令之前。准确来说，是在重定向之前，重定向</description></item><item><title>Shell 脚本：条件分支与循环</title><link>https://zhannicholas.github.io/linux/shell_scripting_conditional_statements_and_loops/</link><pubDate>Thu, 21 Oct 2021 23:05:45 +0800</pubDate><guid>https://zhannicholas.github.io/linux/shell_scripting_conditional_statements_and_loops/</guid><description>和其它编程语言类似，bash 也给我们提供了条件语句（conditional statements）。 条件分支 if 在 shell 中，if/then 的语法为：</description></item><item><title>Shell 脚本：变量</title><link>https://zhannicholas.github.io/linux/shell_scripting_variables/</link><pubDate>Wed, 20 Oct 2021 21:26:46 +0800</pubDate><guid>https://zhannicholas.github.io/linux/shell_scripting_variables/</guid><description>Shell 脚本用变量（variable）来表示数据，变量仅仅只是一个标签（label），它实际上是一个引用（reference）或指针（pointe</description></item><item><title>Shell 脚本：初见</title><link>https://zhannicholas.github.io/linux/shell_scripting_introduction/</link><pubDate>Wed, 20 Oct 2021 20:45:55 +0800</pubDate><guid>https://zhannicholas.github.io/linux/shell_scripting_introduction/</guid><description>接下来将会有一系列与 Shell 脚本相关的笔记文章。在之前的工作中，作为一个 Java Boy，我几乎不需要自己编写 Shell 脚本，所以大学学过的 Shell 脚本编程基本忘完（实</description></item><item><title>Linux 中的硬链接与软链接</title><link>https://zhannicholas.github.io/linux/links_in_the_linux_filesystem/</link><pubDate>Tue, 27 Jul 2021 10:46:48 +0800</pubDate><guid>https://zhannicholas.github.io/linux/links_in_the_linux_filesystem/</guid><description>在 Linux 中，有一个东西叫链接文件，它有点像 Windows 中的快捷方式，可以很方便地实现文件的共享。链接主要分为两种：硬链接（hard link） 和 软连接（so</description></item><item><title>Linux 目录结构</title><link>https://zhannicholas.github.io/linux/linux_directory_structure/</link><pubDate>Sat, 24 Jul 2021 21:57:59 +0800</pubDate><guid>https://zhannicholas.github.io/linux/linux_directory_structure/</guid><description>在平常使用 Linux 的过程中，总感觉各个目录的作用存在某种约定，似乎大家都将程序放在 /bin、/sbin、/usr/bin 或 usr/sbin 下，将配置文件放到 /etc 下</description></item><item><title>Linux/Unix 中的文件类型</title><link>https://zhannicholas.github.io/linux/file_types_in_linux_or_unix/</link><pubDate>Thu, 22 Jul 2021 09:20:30 +0800</pubDate><guid>https://zhannicholas.github.io/linux/file_types_in_linux_or_unix/</guid><description>在 Windows 中，文件类型是根据扩展名来确定的。例如：a.pdf 是一个 pdf 文件，而 b.txt 是一个 txt 文件。但在 Linux/Unix 中，文件类型与文件扩展名没有关系，它们是两个完全</description></item><item><title>Linux添加用户并授予root权限的简单方法</title><link>https://zhannicholas.github.io/linux/linux%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%B9%B6%E6%8E%88%E4%BA%88root%E6%9D%83%E9%99%90%E7%9A%84%E7%AE%80%E5%8D%95%E6%96%B9%E6%B3%95/</link><pubDate>Wed, 13 Feb 2019 16:29:45 +0800</pubDate><guid>https://zhannicholas.github.io/linux/linux%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%B9%B6%E6%8E%88%E4%BA%88root%E6%9D%83%E9%99%90%E7%9A%84%E7%AE%80%E5%8D%95%E6%96%B9%E6%B3%95/</guid><description>快速方法 使用root操作 Step 1: 添加一个用户 adduser username Step 2: 授予root权限 usermod -aG sudo username 但是&amp;hellip;&amp;hellip; 有些时候，这并不管用 在vultr</description></item></channel></rss>