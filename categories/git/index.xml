<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on 's Digital Garden</title><link>https://zhannicholas.github.io/categories/git/</link><description>Recent content in Git on 's Digital Garden</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 30 May 2018 15:56:02 +0800</lastBuildDate><atom:link href="https://zhannicholas.github.io/categories/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git初探</title><link>https://zhannicholas.github.io/posts/git/git_at_first_sight/</link><pubDate>Wed, 30 May 2018 15:56:02 +0800</pubDate><guid>https://zhannicholas.github.io/posts/git/git_at_first_sight/</guid><description>开始 文件的三种状态 已提交(committed) 数据已经安全的保存在了本地的数据库中 已修改(modified) 修改了文件，但还没保存到数据库中 已暂存(staged) 对一个已修改的文件的当前版本做了标记，使之包含在下次的提交快照中。 项目的三个工作区域 Git仓库目录 保存项目的元数据和对象数据库 工作目录 对项目的某个版本独立提取出来的内容 暂存区域 保存下次将要提交的文件列表信息，是一个文件 基本的Git工作流程 在工作目录中修改文件 暂存文件，将文件的快照放入暂存区域 提交更新，将暂存区域中的文件的快照永久保存到Git仓库目录 初次运行前 设置用户名与邮箱地址 --global 表示使用 global config file , 用于所有配置。如果是对于需要使用不同用户名和邮箱的特定项目就不需要这个选项。 $ git config --global user.name username $ git config --global user.email example@xxx.com 设置文本编辑器 $ git config --global core.editor code 查看配置信息 $ git config --list 获取帮助 有三种方式可以获取帮助，windows中默认支支持前两种
$ git help &amp;lt;verb&amp;gt; $ git &amp;lt;verb&amp;gt; --help $ man git-&amp;lt;verb&amp;gt; 基础 获取Git仓库 在现有目录中初始化Git仓库 $ git init 如果不是在一个空文件夹下执行这个命令，那么我们可以多做一点事情：开始跟踪指定文件并提交。使用 git add 命令来实现对指定文件的跟踪，然后执行 git commit 提交。</description></item></channel></rss>