<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on Nicholas Zhan</title><link>https://zhannicholas.github.io/categories/rust/</link><description>Recent content in Rust on Nicholas Zhan</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 26 Sep 2021 20:29:14 +0800</lastBuildDate><atom:link href="https://zhannicholas.github.io/categories/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust 基础：结构体</title><link>https://zhannicholas.github.io/rust/rust_basics_struct/</link><pubDate>Sun, 26 Sep 2021 20:29:14 +0800</pubDate><guid>https://zhannicholas.github.io/rust/rust_basics_struct/</guid><description>在 Rust 中，结构体（struct or structure） 是一种可自定义的数据类型，允许我们将一组相关数据组织在一起，形成一个有意义的整体。Rust</description></item><item><title>Rust 基础：所有权</title><link>https://zhannicholas.github.io/rust/rust_basics_ownership/</link><pubDate>Sat, 25 Sep 2021 10:51:29 +0800</pubDate><guid>https://zhannicholas.github.io/rust/rust_basics_ownership/</guid><description>所有权（ownership） 是 Rust 独一无二的功能，也是 Rust 中的核心功能之一。Rust 不需要开发者手动回收内存，也没有垃圾收集器，但它还能保证内存</description></item><item><title>Rust 基础：控制流</title><link>https://zhannicholas.github.io/rust/rust_basics_control_flow/</link><pubDate>Sun, 05 Sep 2021 08:28:14 +0800</pubDate><guid>https://zhannicholas.github.io/rust/rust_basics_control_flow/</guid><description>几乎所有的编程语言中都有控制流（control flow）的概念，控制流即根据条件的成立与否决定代码的执行逻辑。在 Rust 中，控制流分为 if 表达式和循</description></item><item><title>Rust 基础：函数</title><link>https://zhannicholas.github.io/rust/rust_basics_functions/</link><pubDate>Sat, 04 Sep 2021 15:34:41 +0800</pubDate><guid>https://zhannicholas.github.io/rust/rust_basics_functions/</guid><description>在 Rust 中，函数无处不在。我们学习“Hello, world!”时接触到的 main 函数就是 Rust 中最重要的函数。我们也知道，声明 main 函数的时候需要用到关键字 f</description></item><item><title>Rust 基础：变量与数据类型</title><link>https://zhannicholas.github.io/rust/rust_basics_variables_and_data_types/</link><pubDate>Fri, 03 Sep 2021 21:32:35 +0800</pubDate><guid>https://zhannicholas.github.io/rust/rust_basics_variables_and_data_types/</guid><description>变量 变量与可变性 在 Rust 中，变量（variables）有两种： 不可变变量：一经赋值，就不再允许对变量的值进行修改 可变变量：可可对变量的值进行多次</description></item><item><title>Hello, Rust!</title><link>https://zhannicholas.github.io/rust/hello_rust/</link><pubDate>Thu, 02 Sep 2021 19:45:08 +0800</pubDate><guid>https://zhannicholas.github.io/rust/hello_rust/</guid><description>年初学过几天 Rust，走马观花，很快就忘完了。现在有了些空闲时间，准备重新好好地把 Rust 学一遍，为后续操作系统的深入学习做好铺垫。在此之前，我主</description></item></channel></rss>